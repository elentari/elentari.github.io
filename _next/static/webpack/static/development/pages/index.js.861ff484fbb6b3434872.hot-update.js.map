{"version":3,"file":"static/webpack/static/development/pages/index.js.861ff484fbb6b3434872.hot-update.js","sources":["webpack:///./src/components/three/Avatar.js"],"sourcesContent":["import * as THREE from 'three';\nimport React, { useEffect, useState } from 'react';\nimport { useLoader, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n// import { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\n\nexport function Avatar({ url }) {\n  const gltf = useLoader(GLTFLoader, url);\n  const [mixer] = useState(() => new THREE.AnimationMixer());\n  useFrame((state, delta) => mixer.update(delta));\n\n  const { scene, animations } = gltf;\n\n  useEffect(() => {\n    let neck;\n    let waist;\n\n    scene.traverse(object => {\n      if (object.isBone && object.name === 'arissaNeck') {\n        neck = object;\n      }\n      if (object.isBone && object.name === 'arissaSpine') {\n        waist = object;\n      }\n      if (object.isMesh) {\n        object.castShadow = true;\n        object.receiveShadow = true;\n      }\n    });\n\n    scene.scale.set(7, 7, 7);\n    scene.position.y = -11;\n\n    let idleAnimationClip = THREE.AnimationClip.findByName(animations, 'idle');\n    let animationAction = mixer.clipAction(idleAnimationClip, scene);\n    animationAction.play();\n\n    return () => mixer.uncacheClip(idleAnimationClip);\n  }, [scene, animations]);\n\n  return <primitive object={gltf.scene} />;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAFA;AACA;AAEA;AAAA;AAAA;AAHA;AAAA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}